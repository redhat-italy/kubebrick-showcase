{{- $externalbroker  := $.Values.microservices.config.kubebrick.externalbroker -}}
{{- $externalbrokerurl  := $.Values.microservices.config.kubebrick.externalbrokerurl -}}
{{- $brokername  := $.Values.microservices.config.kubebrick.brokername -}}
{{- $serviceimage  := $.Values.image.repository -}}

{{- $dot := . }}
{{- range $.Values.microservices.config.kubebrick.packagingmachine.queues }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ . }}-packaging-machine
  labels:
    app: {{ . }}-packaging-machine
    version: v1    
    {{- include "kubebrick-factory.labels" $dot | nindent 4 }}    
    app.kubernetes.io/name: camel
spec:
{{- if not $.Values.autoscaling.enabled }}
  replicas: {{ $.Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "kubebrick-factory.selectorLabels" $dot | nindent 6 }}
  template:
    metadata:
    {{- with $.Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        app: packaging-machine
        version: v1
        {{- include "kubebrick-factory.selectorLabels" $dot | nindent 8 }}
    spec:
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}    
      securityContext:
        {{- toYaml $.Values.podSecurityContext | nindent 8 }}
      containers:
        - name: packaging-machine
          securityContext:
            {{- toYaml $.Values.securityContext | nindent 12 }}
          image: "{{ $serviceimage }}"
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          env:
            - name: QUARKUS_HTTP_PORT 
              value: '8080' 
            - name: QUEUE 
              value: '{{ . |lower}}' 
            - name: QUARKUS_DATASOURCE_JDBC_URL
              value: 'jdbc:postgresql://packaging-machinedb:5432/kubebrick' 
            {{ if $externalbroker }}
            - name: QUARKUS_QPID_JMS_URL
              value: '{{ $externalbrokerurl }}'
            {{ else }}
              value: ''amqp://{{ $brokername }}-hdls-svc.{{ $.Release.Namespace }}.svc.cluster.local:5672'
            {{ end }}  
            - name: JAVA_APP_JAR
              value: 'quarkus-run.jar'    
            {{ if $externalbroker }}        
            - name: JAVA_OPTS
              value: '-Djavax.net.ssl.trustStore=/var/keystore/client.ts -Djavax.net.ssl.trustStorePassword=123456'          
            {{ end }}       
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /q/health/live
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 5              
          readinessProbe:
            httpGet:
              path: /q/health/ready
              port: http
        {{- if $externalbroker }}        
          volumeMounts:
            - mountPath: "/var/keystore"
              name: client-keystore
              readOnly: true    
        {{- end }}                  
          resources:
            {{- toYaml $.Values.resources | nindent 12 }}
     {{- if $externalbroker }}        
      volumes:
        - name: client-keystore
          secret:
            secretName: amq-client-trustore
      {{- end }}             
      {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
{{- end }}      
